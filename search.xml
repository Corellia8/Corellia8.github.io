<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AI大模型 - 现状与未来</title>
      <link href="//2023/09/23/ai-da-mo-xing-xian-zhuang-yu-wei-lai/"/>
      <url>//2023/09/23/ai-da-mo-xing-xian-zhuang-yu-wei-lai/</url>
      
        <content type="html"><![CDATA[<h1>AI大模型 - 现状与未来</h1><h2 id="什么是AI大模型">什么是AI大模型</h2><p>AI大模型(Large Language Model)指的是具有数百亿参数的大规模深度学习自然语言模型,通过“预训练-微调”的方式进行建模,能够对语言进行深层理解,具有生成长文本的能力。<br>代表模型有 OpenAI 的 GPT-3、谷歌的 LaMDA、百度的 ERNIE 等。</p><h2 id="AI大模型的现状">AI大模型的现状</h2><ul><li>模型规模不断扩大,参数数量达到千亿级,计算能力需求巨大。</li><li>支持多模态输入,不仅文本,也能处理图像、视频、语音等信息。</li><li>应用范围不断扩大,从文本生成到代码生成、图像生成、智能对话等。</li><li>普通用户可通过 API 接口调用,降低使用门槛。</li><li>相关公司纷纷推出商业化服务,AI 创业数量激增。</li></ul><h2 id="AI大模型的发展前景">AI大模型的发展前景</h2><ul><li>模型会继续增大规模,演化为万亿参数级。计算力的进步是基础。</li><li>多语言支持会增强,从英语扩展到其他语言。</li><li>模型会变得更加专业,在特定领域的表现更强。</li><li>理解能力和逻辑能力将得到提高,变得更加智能。</li><li>创意能力可能得到一定增强,如生成图像、音乐等创作。</li><li>需要解决可解释性欠佳、偏见、安全性等问题。</li><li>监管会更加完善,确保其健康发展。</li></ul><h2 id="总结">总结</h2><p>AI大模型正在重塑语言智能领域,其发展前景广阔但也面临挑战。模型的演化路径值得持续关注,它们将以什么形式影响人类社会也令人充满兴趣。</p>]]></content>
      
      
      <categories>
          
          <category> Artificial intelligence </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-列表</title>
      <link href="//2022/12/02/python-xue-xi-lie-biao/"/>
      <url>//2022/12/02/python-xue-xi-lie-biao/</url>
      
        <content type="html"><![CDATA[<h2 id="Day3-列表">Day3-列表</h2><h3 id="一、列表list">一、列表list</h3><h4 id="1-概述">1.概述</h4><p>变量：使用变量存储数据，但是，缺点:一个变量每次只能存储一个数据<br>思考：如果一次性存储多个数据，怎么做？</p><p>解决：采用列表</p><p>作用：列表相当于是一个容器，可以同时存储多个数据</p><p>本质：列表是一种有序的集合</p><p>说明：有序指的就是有顺序【数据的存放的顺序和底层存储的顺序是相同的】</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#需求：存储5个人的年龄age1 = 18age2 = 20age3 = 90...#list#在栈空间中有一个变量【列表的名字】#变量指向了内存堆空间中的一个列表，列表中存储了5个变量age_list = [10, 13, 16, 39, 20]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-创建列表">2.创建列表</h4><p>语法：变量名 = 列表</p><p>列表名称 = [数据1，数据2, …]</p><p>说明：使用[ ]表示创建列表</p><p>列表中存储的数据被称为元素</p><p>列表中的元素被从头到尾自动进行了编号，编号从0开始，这个编号被称为索引，角标或者下标</p><p>​索引的取值范围：0~元素的个数 -1【列表的长度 -1】</p><p>超过索引的范围：列表越界</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#语法：列表名【标识符】 = [元素1，元素2.。。。。]#1.创建列表#1.1创建一个空列表#1.2创建一个带有元素的列表#2.思考问题：列表中能不能存储不同类型的数据？list3 = ['abc',10,3.14,True]print(list3)#注意：将需要存储的数据放到列表中，不需要考虑列表的大小，如果数据量很大的情况，在进行存储数据的时候，列表底层自动扩容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-列表元素的访问">3.列表元素的访问</h4><p>访问方式：通过索引访问列表中的元素【有序，索引：决定了元素在内存中的位置】</p><h5 id="3-1获取元素">3.1获取元素</h5><p>语法：列表名[索引]</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#元素的访问#创建列表list1 = [5,51,6,76,98,3]#需求：获取索引为3的位置上的元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-2替换元素">3.2替换元素</h5><p>语法：列表名[索引] = 值</p><p>注意：列表中存储的是其实是变量，所以可以随时修改值</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#需求：将索引为1位置上的元素替换为100#问题：超过索引的取值范围，则会出现索引越界的错误#解决办法：检查列表索引的取值范围#print(list1[6])   #IndexError: list index out of range   索引越界<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-3-遍历列表">3.3 遍历列表</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表的遍历</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token comment">#1.直接操作的是元素</span><span class="token comment">#2.通过索引的方式操作元素</span><span class="token comment">#思路：使用列表生成器生成一个和索引有关的列表 0~len(list2) -1</span><span class="token comment">#3.同时遍历索引和元素</span><span class="token comment">#enumerate  枚举【类似于一个容器】</span><span class="token comment">#index,n1-----索引，元素值</span><span class="token keyword">for</span> index<span class="token punctuation">,</span>n1 <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-列表的操作">4.列表的操作</h4><h5 id="1-1列表元素组合">1.1列表元素组合</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表组合【合并】</span><span class="token comment">#使用加号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-2列表元素重复">1.2列表元素重复</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表元素的重复</span><span class="token comment">#使用乘号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-3判断元素是否在列表中">1.3判断元素是否在列表中</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#判断指定元素是否在指定列表中</span><span class="token comment">#成员运算符   in  not in</span><span class="token triple-quoted-string string">"""工作原理：使用指定数据在列表中和每个元素进行比对，只要元素内容相等，则说明存在的返回：True或者False"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-4列表截取【切片】">1.4列表截取【切片】</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表的截取</span>list7 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">6878</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#使用冒号:</span><span class="token comment">#截取指定的区间：列表名[开始索引：结束索引],特点：包头不包尾    前闭后开区间</span><span class="token comment">#从开头截取到指定索引，特点：不包含指定的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#从指定索引截取到结尾</span><span class="token comment">#注意：因为包头不包尾，所以如果要取到最后一个元素，可以超过索引的范围，不会报错</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-列表的功能【掌握】">5.列表的功能【掌握】</h4><p>Python内置的功能【函数】</p><p>用法</p><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#功能的使用：列表名.功能的名字()</span><span class="token comment">#一、添加元素</span><span class="token comment">#1.append()   追加，在列表的末尾添加元素</span> <span class="token comment">#特点：是在原列表的基础上操作的,追加多个元素,不能直接追加，通过列表的形式追加，形成了一个二维列表</span><span class="token comment">#2.extend()   扩展，在列表的末尾添加元素</span> <span class="token comment">#注意：append可以添加单个元素，但是extend不可以</span> <span class="token comment">#append添加多个元素的时候，以整个列表的形式添加进去；但是，extend只添加元素</span><span class="token comment">#3.insert()   插入 ,在指定的索引处插入一个元素,后面的其他元素向后顺延</span> <span class="token comment">#insert(索引，插入的数据)</span> <span class="token comment">#需求：在索引为2的位置插入一个数字100</span><span class="token comment">#二、删除元素</span><span class="token comment">#1.pop()    弹出，移除列表中指定索引处的元素</span> list14 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span>list14<span class="token punctuation">)</span> <span class="token comment">#注意1：默认移除的是最后一个元素</span> <span class="token comment">#注意2：返回的是被移除的数据</span>result14 <span class="token operator">=</span> list14<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list14<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list14<span class="token punctuation">)</span><span class="token comment">#2.remove()  移除   特点;移除指定元素在列表中匹配到的第一个元素【从左往右】</span> <span class="token comment">#remove(元素值)</span><span class="token comment">#3.clear()      清除  清除列表中的所有的元素，原列表变为空列表</span>list16 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">673</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list16<span class="token punctuation">)</span>list16<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list16<span class="token punctuation">)</span><span class="token comment">#三、获取</span><span class="token comment">#直接使用功能：功能名称(列表)</span> <span class="token comment">#1.len() length,长度，获取列表的长度或者获取列表中元素的个数</span> <span class="token comment">#2.max()  获取列表中的最大值</span> <span class="token comment">#3.min() 获取列表中的最小值</span> <span class="token comment">#4.index()     索引,从列表中匹配到的第一个指定元素的索引值</span> <span class="token comment">#5.count()   个数，查找指定元素在列表中出现的次数 </span><span class="token comment">#四、其他用法</span><span class="token comment">#1.reverse() 反转，将列表中的元素倒序输出</span> <span class="token comment">#注意;在列表的内部进行反转，并没有生成新的列表</span><span class="token comment">#2.sort()    排序,默认为升序排序   注意：在列表的内部操作</span>list20 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">768</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token comment">#列表名.sort()</span> <span class="token comment">#升序</span> <span class="token comment">#list20.sort()</span> <span class="token comment">#降序</span>list20<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#3.sorted()  排序,默认为升序排序   注意：生成一个新的列表</span> <span class="token comment">#升序</span> <span class="token comment">#降序</span>list23 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>list21<span class="token punctuation">,</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment">#按照元素的长度来进行排序</span>list24 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>list00<span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">)</span><span class="token comment">#课堂任务：remove()</span>list30 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">435</span><span class="token punctuation">,</span><span class="token number">5656</span><span class="token punctuation">,</span><span class="token number">6767</span><span class="token punctuation">,</span><span class="token number">435</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">5676</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token comment">#需求：移除列表中指定的所有的元素，例如：23</span><span class="token number">1.</span>自定义一个数字列表，获取这个列表中的最小值<span class="token number">2.</span> 自定义一个数字列表，元素为<span class="token number">10</span>个 <span class="token punctuation">,</span>找出列表中第一大数连同下标一起输出<span class="token number">3.</span> 自定义一个数字列表，求列表中第二大数的下标<span class="token number">4.</span> 青年歌手大奖赛 <span class="token punctuation">,</span>有<span class="token number">10</span>个评委打分 <span class="token punctuation">,</span><span class="token punctuation">(</span>去掉一个最高分一个最低分<span class="token punctuation">)</span>求平均分<span class="token number">5.</span> 定义列表，存放<span class="token number">5</span>个学生的成绩【成绩值自己定】，获得成绩之和，平均成绩，最小成绩，最大成绩<span class="token number">6.</span> 将一个列表逆序输出<span class="token punctuation">,</span> 提示<span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-二维列表">6.二维列表</h4><p>一个列表的元素是一个列表</p><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#一维列表</span>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">346</span><span class="token punctuation">]</span><span class="token comment">#二维列表</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">543</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">234</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">4565</span><span class="token punctuation">,</span><span class="token number">767</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">565</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment">#处理二维列表：当做一个一维列表使用</span>subList <span class="token operator">=</span> list2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>subList<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>subList<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、布尔值和空值">二、布尔值和空值</h3><h4 id="1-布尔值">1.布尔值</h4><p>一个布尔类型的变量一般有两个值，True,False</p><p>作用：用于分支和循环语句中作为条件判断</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#Booleanb1 = Trueb2 = False#条件表达式结果布尔值print(4 5)print(1 and 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-空值">2.空值</h4><p>Python中的一种特殊的数据类型，使用None表示</p><p>区别与0：0是数字类型，None本身就是一种数据类型</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#空值n = Noneprint(n)   #None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="三、系统功能">三、系统功能</h3><h4 id="1-数学功能">1.数学功能</h4><p>abs(x):  absolute 求x的绝对值</p><p>max(): 求最大值</p><p>min()：求最小值</p><p>pow(n,m):求一个数的多少次幂</p><p>round(x，n):返回浮点数x的四舍五入值,如果给出n值，则表示舍入到小数点后几位</p><p>代码演示：</p><p>导入math模块，math.功能名()</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#以下的功能必须导入math模块import  math#使用格式：math.功能名称#19向上取整print(math.ceil(18.1))print(math.ceil(18.9))#18向下取整print(math.floor(18.1))print(math.floor(18.9))#求平方print(pow(3,2))#开平方【掌握】print(math.sqrt(9))#获取整数部分和小数部分，得到的结果为元组print(math.modf(22.3))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-随机数random【掌握】">2.随机数random【掌握】</h4><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import random#1.random.choice(列表)  从指定列表中随机选择一个元素出来#指定列表#列表生成器#使用字符串，相当于使用了元素为字母的列表#需求;产生一个4~10之间的随机数#2.random.randrange(start,end,step)"""start:指定范围的开始值，包含在范围内，默认为0end:指定范围的结束值，不包含在范围内step:步长，指定的递增基数，默认为1"""#需求1：从1~100之间选取一个奇数随机数print(random.choice(range(1,100,2)))print(random.randrange(1,100,2))#需求2：生成一个0~99之间的随机数print(random.randrange(100))#3.random.random()   获取0~1之间的随机数，结果为浮点型n = random.random()#需求：保留小数点后两位print(round(n,2))#需求1：获取4~10之间的随机数n1 = random.random() * 6 + 4"""[0,1] * 6 ---------[0,6][0,6] + 4 --------[4,10]"""#4.将列表中的元素进行随机排序【了解】list1 = [23,5435,4,6]random.shuffle(list1)print(list1)#5.随机生成一个实数，它在[3,9]范围内，结果为浮点型print(random.uniform(3,9))#需求：求50~100之间的随机数，包括浮点数n2 = random.uniform(50,100)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>7.完成猜拳游戏</p><hr><p>请输入你的选择:</p><ol><li>石头</li><li>剪刀</li><li>布</li></ol><hr><p>如: 你的选择是【布】, 电脑的选择是【石头】<br>恭喜你获得了胜利！</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内部审计五大流程与方法</title>
      <link href="//2022/12/02/nei-bu-shen-ji-wu-da-liu-cheng-yu-fang-fa/"/>
      <url>//2022/12/02/nei-bu-shen-ji-wu-da-liu-cheng-yu-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、审前准备工作">一、审前准备工作</h2><h3 id="（一）整体内容框架">（一）整体内容框架</h3><p>| 基本流程  | 主要工作 | 主要方法 | 审计心态 | 被审心态 |</p><p>| 审前准备  | 1.编制年度审计计划<br>2.下达审计任务书<br>3.组成审计小组<br>4.编制项目审计计划<br>5.组织审计前沟通<br>6.编写审计方案<br>7.下达审计通知书<br>8.张贴审计告示| 1.审计调整方法<br>2.分析判断方法<br>3.沟通协调方法 | 1.冲动心态<br>2.畏难心态  | 1.配合心态<br>2.双重心态<br>3.规避心态<br>4.防范心态<br>5。抵触心态 |</p><h3 id="（二）主要工作">（二）主要工作</h3><h4 id="1-编制年度审计计划应该关注的因素">1.编制年度审计计划应该关注的因素</h4><p>单位组织年度内经济工作的中心问题；单位组织重大政策措施落实情况及存在的问题；经营管理中存在的突出问题和难点问题；群众普遍关注或反映强烈的热点问题；以往审计发现的比较突出、影响较大的问题；具体审计项目先后顺序安排；审计资源(人员数量、审计耗时与审计经费)的合理分配；后续审计的必要安排。</p><h4 id="2-项目审计计划的内容">2.项目审计计划的内容</h4><p>审计目标；审计范围；重要性；审计风险评估；审计小组构成；审计时间分配；专家与外部审计工作结果的利用等。</p><h4 id="3-审计前的调查内容">3.审计前的调查内容</h4><p>经营活动情况；内部控制设计与运行情况；财务会计资料；重要合同、协议及会议记录；上次审计结论、建议及后续审计执行情况；上次外部审计意见等。</p><h4 id="4-审计方案的内容">4.审计方案的内容</h4><p>具体审计目的；具体审计方法和程序；预定执行人及执行日期等。</p><h4 id="5-审计通知书的内容">5.审计通知书的内容</h4><p>被审计单位及审计项目名称；审计目的；审计范围；审计时间；被审计单位应提供的具体资料和必要协助；审计小组名单；审计机构及负责人签章和签发日期。(附件包括：被审计单位承诺书、被审计单位提供资料清单、审计文书送达回证。</p><h2 id="二、审计实施工作">二、审计实施工作</h2><h3 id="（一）整体内容框架-2">（一）整体内容框架</h3><p>表2 审计实施工作的整体内容框架</p><h3 id="（二）主要工作-2">（二）主要工作</h3><h4 id="1-控制测试">1.控制测试</h4><p>控制测试内容包括内部控制健全性测试与有效性测试。</p><p>健全性测试是评价被审计单位各项业务活动是否建立了内部控制制度；各项内部控制制度是否符合内部控制的基本原则(全面、制衡、成本效益、权责利对称)；控制环节是否设置齐全；关键控制点是否存在；控制强点与控制弱点。</p><p>有效性测试是评价内部控制系统布局是否合理，有无多余和不必要的控制；关键控制点是否发挥作用；内部控制目标是否达到。</p><p>控制测试方法有：询问相关人员；检查内部控制生成的文件和记录；观察被审计单位经营活动；重新执行有关内部控制(穿行测试)；功能测试。</p><p>穿行测试(waIk-through test)：检查一项业务从头至尾的处理情况，以确认控制程序是否认真执行。一般采用顺查法。从凭证开始查到登记入账为止。</p><p>功能测试：查明制度执行是否发挥了控制作用，还要进行功能分析。注意是否存在多余制度(不经济、无效率、管理混乱)。</p><h4 id="2-实质性测试">2.实质性测试</h4><p>实质性测试内容包括业务活动效益性测试和财务收支合法性测试。测试种类有分析性程序、交易测试、余额测试和列报测试。测试方法是：询问、观察、检查、监盘、函证、分析、计算。</p><p>实质性测试中关于重要性原则判断的考虑：</p><p>(1)绝对数。把某一特定金额作为重要性水平，而不考虑经营规模或业务量的大小。</p><p>(2)以错报金额占相关账户金额的百分比来比较判断错报是否重要。</p><p>(3)以错报金额占利润的百分比来比较判断错报是否重要。</p><p>(4)以错报金额占资产的百分比来比较判断错报是否重要。</p><p>(5)错报的性质(违法、舞弊)而不考虑金额大小。</p><h4 id="3-审计工作底稿与审计日志">3.审计工作底稿与审计日志</h4><p>审计工作底稿是审计业务的具体记录，其内容包括：被审计单位名称；审计事项名称；审计事项期间i审计事项描述与结果记录；审计结论；执行人姓名与执行日期；复核人员姓名、复核日期与复核意见；索引号及页次；审计标识。审计工作底稿应实行多层次复核。</p><p>审计日志是审计人员行为的过程记录，其内容包括：审计事项名称；实施的审计步骤与方法；审计查阅的资料名称和数量；审计人员的专业判断和查证结果；其他需要记录的情况。</p><h4 id="4-中期审计报告">4.中期审计报告</h4><p>中期审计报告是指在审计过程中发现重要问题。及时传达给高层管理者和被审计单位，以便他们迅速采取行动，纠正失误，减少损失。中期报告可以是书面也可以是口头，可以是正式报送也可以是非正式报送，非常灵活。</p><h2 id="三、审计报告工作">三、审计报告工作</h2><h3 id="（一）整体内容框架-3">（一）整体内容框架</h3><h3 id="（二）主要工作-3">（二）主要工作</h3><h4 id="1-审计报告">1.审计报告</h4><p>审计报告基本要素包括：标题、收件人、正文、附件、签章和报告日期。正文内容有：审计立项依据、审计目的、审计范围、审计重点、审计标准、审计依据、审计结论、审计决定、审计建议等。附件包括对审计过程和审计发现问题的具体说明、被审计单位反馈意见。审计报告重点说明：披露发现的情况，说明在什么方面出问题；对发现的情况进行描述。说明为什么出问题；提出改进建议。说明应采取什么整改措施；反映被审计单位意见与行动计划。</p><p>审计报告基本类型：一是满意(肯定、积极)审计意见；二是大致满意但有例外的审计意见；三是不满意(否定、消极)审计意见。</p><p>审计报告修订路径：</p><p>审计报告草稿→审计人员修订→审计组长修订→部门经理修订→审计经理修订→被审计单位提出意见→领导审核→正式定稿以待发送。</p><h4 id="2-审计交流">2.审计交流</h4><p>审计交流包括：征求反馈意见、审计建议、审计整改、审计决定等。审计交流对事不对人，围绕问题开展细致、深入的交流。</p><h2 id="四、后续审计工作">四、后续审计工作</h2><h3 id="（一）整体内容框架-4">（一）整体内容框架</h3><h3 id="（二）主要工作-4">（二）主要工作</h3><h4 id="1-后续审计中的三方职责">1.后续审计中的三方职责</h4><p>审计人员职责：对被审计单位给予充分尊重，不把具体纠正措施强加给被审计单位；采取合适的方法确定被审计单位对审计发现是否采取了恰当的行动；向高层管理者报告其后续审计中的判断和评价；实施后续审计时尽量避免对被审计单位正常业务的影响。</p><p>被审计单位职责：配合、协助审计人员的后续审计工作；对审计报告作出及时、全面的回复并对报告中提到的缺陷采取切实有效而持续的纠正措施：向审计人员和高层管理者汇报纠正行动取得的进展，并提出在纠正方法上的不同意见；选择最恰当的纠正方法。</p><p>高级管理层职责：监控后续审计过程，鼓励被审计单位对审计报告作出回复；评审被审计单位的纠正措施。考虑其充分性和有效性；避免干涉内部审计人员的后续审计工作。</p><h4 id="2-制定后续审计政策">2.制定后续审计政策</h4><p>后续审计政策的制定必须做到：表明政策中的各项声明均得到企业最高权力层支持并以书面形式载明；政策应发给所有管理层的主管；要求被审计单位在一定时限内对审计人员的发现和建议作出书面回复；要列示审计人员、被审计单位和高级管理在后续审计中的职责。</p><h4 id="3-后续审计工作底稿">3.后续审计工作底稿</h4><p>后续审计工作底稿包括：被审计单位对审计报告的书面回复；与被审计单位就回复中提到的纠正措施、存在缺陷进行探讨的回函：报告专递信和讨论有关审计报告事项的信函复印件；后续审计会议、电话备忘录以及文件审查、计算的书面资料；发送给被审计单位的其他信件、备忘录。</p><h4 id="4-后续审计报告">4.后续审计报告</h4><p>后续审计报告一般包括：审计目的；以前审计报告中的审计发现和建议；纠正措施；审查结果；被审计单位的审计回复；后续审计发现；后续审计评价。</p><h4 id="5-扩散审计">5.扩散审计</h4><p>扩散审计是针对被审计单位以外的其他部门是否也存在相同问题开展的审计工作，检查其是否也开展了同步后续审计。</p><h2 id="五、成果运用工作">五、成果运用工作</h2><h3 id="（一）整体内容框架-5">（一）整体内容框架</h3><h3 id="（二）主要工作-5">（二）主要工作</h3><p>建立完善的审计公告与通报制度。积极争取高级管理层和各个被审计单位的支持。审计结果公告与通报工作必须加强。立项必审，审计必纠，结果必告。责任必纠。建立纠错机制和制度，审计一个项目，完善一项制度，教育一批干部。审计政策建议能够得到适当管理层的肯定、采纳和应用，形成制度和政策，以达到防弊、兴利与增值的目的。</p><p>审计成果运用的具体体现：组织内部高层管理者对审计意见和建议的批示；职能部门对审计建议的采纳；相关责任人的移送处理。</p><p>审计成果运用=高层批示+部门采纳+移送处理+建立健全政策与制度=防弊、兴利、增值。</p><h2 id="六、主要审计方法的运用">六、主要审计方法的运用</h2><p>传统审计方法往往被认为是审计取证方法，包括检查、监盘、询问、查询、函证、计算、分析性复核等方法。其实这是片面的，审计方法是一个体系，包括书面资料审阅方法、客观实物证实方法、审计调查方法、分析判断方法、审计沟通方法、审计写作方法与制度设方法等。</p><h3 id="（一）书面资料审阅方法">（一）书面资料审阅方法</h3><p>1 核对法。核对记账凭证与原始凭证(内容、数量、日期、金额等)、核对凭证与账簿(日期、会计科目、金额、方向等)、核对明细账与总账(期初余额、本期发生额、期末余额)、核对账簿与报表、核对报表与报表。</p><p>2 审阅法。审阅会计资料完整、齐全、正确；审阅经济活动真实、合法、合理。</p><p>3 复算法。小计、合计、乘积、余额，通过复算发现差错。</p><p>4 比较法。实际与计划比较、本期与前期比较。通过比较发现差异。</p><p>5 财务分析法。比率分析法、趋势分析法、账户分析法与账龄分析法。</p><h3 id="（二）客观实物证实方法">（二）客观实物证实方法</h3><p>1 盘点法。采取恰当的盘存方式，包括突击式盘点(现金和贵重物品)与预告式盘点(一般物资)；选择合适的盘点时间，在营业或工作开始之时与之后；健全有关手续，明确有关责任。</p><p>2 调节法。通过调节确认结账日财产实物的实存数。</p><p>3 鉴定法。聘请信誉好有影响力的专家，对专业事项进行鉴定。</p><h3 id="（三）审计调查方法">（三）审计调查方法</h3><p>1 观察法(账外信息法)。观察法是“跳出”会计资料，从“账外”捕捉信息的审计调查方法。该方法没有固定格式，应处处留心，见机行事。灵活多样。</p><p>2 询问法。审计工作要创造相互理解、相互信任的和谐气氛。审计人员要面带微笑，语言甜美。存在的问题大多数是由管理引起的，而管理的缺陷既有决策层和管理层的原因。也有具体实施人员的原因。审计人员最好的办法是引导被审计人自己分析、自己找缺点，避免主观假设、仓促下结论，要充分体会被审计人的意图、目的和困难，客观分析缺陷形成原因，淡化双方的对立情绪，在感情上与被审计人产生共鸣。提问时应注意技巧，善于倾听、耐心倾听。</p><p>3 函证法。函证对象的选择主要关注关联方、往来单位、银行、账户余额大小，加强函证过程的控制。</p><p>4 审计会议法。参加人员包括高层、中层管理人员，纪检、监察人员，被审计当事人和代表群众。加强审计前、审计中、审计后三维立体的会议沟通。</p><p>5 问卷调查法。问卷涉及规定动作与自选动作调查，注重对各部门、各环节风险因素的调查。</p><p>6 现场走访。询问+观察=现场走访。了解业务细节。列出访谈提纲。避免录音，创造相互信任的气氛。</p><h3 id="（四）审计分析判断方法">（四）审计分析判断方法</h3><p>审计是一种高智商的工作，经常要运用取证、判断、推理来核定事实，在一定程度上审计与被审计之间是一种智慧的较量。审计判断是审计人员根据专业知识和经验，通过识别和比较，对审计事项和自身行为所做的估计、断定或选择。审计判断具有目标性、主观性、经验性、风险性和连续性。</p><p>审计判断的方法主要有：</p><p>1 直觉判断法。直接判断法是审计人员运用已有的知识结构对当前需要判断的事项作出分析和推论。是建立在审计人员丰富的实践经验基础之上的。</p><p>2 比较判断法。比较判断法是审计人员运用类比的原理，把需要判断的项目与类似的项目进行对比，从而分析其差异的判断方法。</p><p>3 归纳判断。归纳判断是从个别特殊事件中推出一般结论的审计判断方法。现代审计中，审计人员通过抽样，从总体中选取一定数量的样本进行测试，并根据样本测试结果推断总体特征。</p><p>4 演绎判断。演绎判断是从一般原理出发推演出个别结论的思维方法；从一般法律法规、会计原则和审计准则的要求，针对具体经济业务推断出具体业务是否合法、公允的结论，是从一般到特殊的判断方法。</p><h3 id="（五）审计沟通方法">（五）审计沟通方法</h3><p>1 按照沟通环节可以分为：</p><p>事前沟通包括下发审计通知书、张贴审计告示、座谈会等；事中沟通包括个别谈话、资料交流、意见交流等；事后沟通包括结果沟通、审计报告意见征求、管理建议书、审计决定书、审计通报等。</p><p>2 按照沟通方式可以分为：</p><p>口头沟通有询问、会谈、调查、讨论、会议、征求意见等；书面沟通有问卷调查、审计通知书、内外审计协调报告、管理建议书、审计报告等。</p><p>3 沟通主要类型有：</p><p>语言沟通(书面语言和口头语言)、非语言沟通(肢体行为、眼神与动作)、人员沟通(审计人员与相关人员沟通，主要方式是倾听)、组织沟通(审计部门与上、下、左、右、内、外等部门沟通)。</p><h3 id="（六）审计写作方法">（六）审计写作方法</h3><p>1 运用主动语态。例如：“审计决定没有被管理当局执行”改为“管理当局没有执行审计决定”。</p><p>2 运用通俗语言。例如：“采购部门把业务上的低效率归咎于因预算资金欠缺而造成的人员缺乏。”改为“采购部门认为。由于雇不起采购员，他们完不成采购任务。”</p><p>3 语句和段落要短小。例如：“这些金额，即招待费、礼品费用、其他服务成本是可以免除的。”改为“这些金额是可以免除的，包括招待费、礼品费用、其他服务成本。”</p><p>4 尽可能使用图表以增强趣味性、可读性和灵活性。</p><h3 id="（七）制度建设方法-约束与激励">（七）制度建设方法(约束与激励)</h3><p>1 预防性控制制度。</p><p>预防性制度是事前控制，把错误与舞弊消灭在萌芽状态。例如：授权批准、职责分离、双重控制、付款前审核、招标投标。</p><p>2 检查性控制制度。</p><p>检查性制度是事中控制，把已经发生和存在的错误检查出来。例如：实物盘点、实地观察、编制银行存款调节表、相关单据核对、预算执行控制、成本控制。</p><p>3 纠正性控制制度。</p><p>纠正性制度是事后控制。把由检查性控制揭露出来的问题进行控制。例如：考核与奖惩。</p><p>4 补偿性控制制度。</p><p>补偿性制度也是事前控制，是针对某些控制环节的不足或缺陷而采取的控制措施。补偿性控制的目的是要排除损失、错误和舞弊。例如：岗位轮换、不定期盘点、突击检查等。</p><p>5 指导性控制制度。</p><p>预防性制度、检查性制度和纠正性制度是为了预防、检查和纠正不利的结果。指导性控制是为了实现有利结果而采取的控制，主要由管理层进行。</p><h2 id="七、被审计人员心态剖析">七、被审计人员心态剖析</h2><h3 id="一-配合心态-服从心态">(一)配合心态(服从心态)</h3><p>热情接待，积极配合，大力支持，提供资料，全面、真实回答。服从审计结论。</p><h3 id="二-双重心态">(二)双重心态</h3><p>表面积极，过度热情，态度和蔼，展示清白，背后设法抵制各种审计。</p><h3 id="三-规避心态-抵触心态、对抗心态">(三)规避心态(抵触心态、对抗心态)</h3><p>不主动配合，不理不睬；不提供资料，不配合，不回答问题；避重就轻，百般抵赖；推卸责任，对抗到底。</p><h3 id="四-防范心态">(四)防范心态</h3><p>认为审计是挑毛病、专门挑刺的行为，查出问题会影响单位声誉、影响领导个人发展前途，因此对审计人员不信任，心存防范。</p><h3 id="五-应付心态">(五)应付心态</h3><p>对待审计既不积极配合，也不阻挠反对。按照规定程序进行，不冷不热，听之任之，任其审计，应付了事。</p><h3 id="六-厌烦心态">(六)厌烦心态</h3><p>被审计单位业务繁忙。疲于应付各种检查和审计，对审计产生厌烦心态，因而不积极配合。</p><h3 id="七-干扰心态">(七)干扰心态</h3><p>转移、隐藏非法资产；拖延、拒绝执行审计决定；人情沟通、权力介入、利益交换；对审计结论提出不恰当质疑。</p><h3 id="八-从众心态">(八)从众心态</h3><p>被审计单位对于审计整改意见持观望态度。“同类型问题，其他部门怎样整改我们也效仿。”</p><h3 id="九-侥幸心态">(九)侥幸心态</h3><p>总认为自己可能不被审计到，即使抽查到了。也不一定就查出问题；即使查出问题，也不一定处理和追究责任。</p><h2 id="八、审计人员心态剖析">八、审计人员心态剖析</h2><h3 id="一-冲动心态">(一)冲动心态</h3><p>审计人员对审计项目了如指掌。热切期待，胸有成竹，跃跃欲试，心情激动。</p><h3 id="二-畏难心态">(二)畏难心态</h3><p>审计人员对审计项目预期艰难，被审计单位阻力大，心理压力大，对自己的审计能力产生怀疑。</p><h3 id="三-拖延心态">(三)拖延心态</h3><p>鉴于审计对象与审计环境的复杂性，审计人员难以自拔。不知所措。审计人员出于审计责任考虑，往往拖延时间。</p><h3 id="四-速成心态">(四)速成心态</h3><p>审计人员对面对熟悉的审计项目急于求成，厌烦急躁，单凭主观判断和经验判断，不注意变化了的新情况。</p><h3 id="五-对抗心态">(五)对抗心态</h3><p>审计人员在审计实施过程中，主要是在面对重大实质问题和原则问题时，与被审计单位人员形成对立情绪，原则性有余而灵活性不足。</p><h3 id="六-批判心态">(六)批判心态</h3><p>对待任何被审计事项，总是以批判眼光看待。总认为不真实、不合法；总认为被审计人员在欺骗，没有提供全部真实资料。</p><h3 id="七-放松心态">(七)放松心态</h3><p>审计取证结束，问题已经查清，大功已经告成。不考虑审计结论的沟通，不考虑审计报告的写作和处理意见的提交。万事大吉，彻底放松。</p><h3 id="八-恐惧心态">(八)恐惧心态</h3><p>由于审计项目给审计人员自身带来的人身安全、职位升迁、人际关系等方面的影响而产生恐惧。</p><h3 id="九-忧虑心态">(九)忧虑心态</h3><p>对待查出的问题，能认真分析单位组织存在的风险，忧虑重重，责任心强，先天下之忧，考虑深层次的体制、机制与制度问题。</p><p>审计人员应该及时掌握被审计人员的心态，并适时调整自己的心态，运用恰当的审计方法做好审计工作。</p>]]></content>
      
      
      <categories>
          
          <category> Internal Audit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 内部审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>财经之旅：Jrin的审计世界</title>
      <link href="//2022/12/02/cai-jing-zhi-lu-jrin-de-shen-ji-shi-jie/"/>
      <url>//2022/12/02/cai-jing-zhi-lu-jrin-de-shen-ji-shi-jie/</url>
      
        <content type="html"><![CDATA[<p>在数字的海洋和账本的森林中，我是一名探险者Jrin。揭开数字背后的故事，确保每一分钱的流向都清晰透明。在这个由数字构建的世界里，我建立了这个Blog，作为分享、交流和学习的园地。</p><h2 id="漫步在数字的诗行">漫步在数字的诗行</h2><p>每一张报表，每一笔交易，都是一首隐藏在日常中的诗。作为一名审计师，我学会了解读这些诗篇，理解它们背后的意义。我在这里分享我的解读，希望能够启发你，也许你会发现数字背后的音乐，感受到财务数据的韵律。</p><h2 id="探索真理的旅程">探索真理的旅程</h2><p>审计不仅是一份工作，它是一种探索真理的旅程。在这个旅程中，我学会了怀疑，学会了验证，学会了发现隐藏在细节中的真相。我将这些经验记录下来，希望能够帮助同行们提升自己的审计技能，也希望能够激发对这个行业感兴趣的朋友们的好奇心。</p><h2 id="知识的交汇点">知识的交汇点</h2><p>这个博客是我与世界交流的窗口。我在这里分享我对财务审计的理解，同时也期待从你那里学习到新的知识。无论是最新的审计技术，还是行业的最新动态，我都愿意与你一起探讨，一起成长。</p><h2 id="连接你我，共创未来">连接你我，共创未来</h2><p>我相信，通过分享和交流，我们可以共同进步。在这个博客中，我不仅会分享我的个人见解，也会邀请行业内的专家和朋友们分享他们的知识和经验。让我们一起构建一个充满智慧和创意的社区，共同推动财务审计行业的发展。</p><h2 id="邀请你加入这场旅行">邀请你加入这场旅行</h2><p>如果你对财务审计感兴趣，或者你正在这个行业中寻找方向，我邀请你加入这场旅行。让我们一起探索数字的世界，发现隐藏在账本背后的故事。在这里，你不仅可以找到知识，还可以找到志同道合的朋友。</p><p>让我们一起启程，在这个充满挑战和机遇的财经之旅中，共同成长，共创未来。</p><p>感谢你的阅读，我是Jrin，一名热爱探索的财务审计从业者。在这个博客中，我期待与你相遇，共同书写我们的财经篇章。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 财务 </tag>
            
            <tag> 审计 </tag>
            
            <tag> 注册会计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="//2022/01/02/hello-world/"/>
      <url>//2022/01/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
