<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="//2022/12/02/wo-de-di-yi-pian-bo-ke/"/>
      <url>//2022/12/02/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="Day3-列表">Day3-列表</h2><h3 id="一、列表list">一、列表list</h3><h4 id="1-概述">1.概述</h4><p>变量：使用变量存储数据，但是，缺点:一个变量每次只能存储一个数据<br>思考：如果一次性存储多个数据，怎么做？</p><p>解决：采用列表</p><p>作用：列表相当于是一个容器，可以同时存储多个数据</p><p>本质：列表是一种有序的集合</p><p>说明：有序指的就是有顺序【数据的存放的顺序和底层存储的顺序是相同的】</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#需求：存储5个人的年龄age1 = 18age2 = 20age3 = 90...#list#在栈空间中有一个变量【列表的名字】#变量指向了内存堆空间中的一个列表，列表中存储了5个变量age_list = [10, 13, 16, 39, 20]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-创建列表">2.创建列表</h4><p>语法：变量名 = 列表</p><p>​   列表名称 = [数据1，数据2, …]</p><p>说明：使用[ ]表示创建列表</p><p>​   列表中存储的数据被称为元素</p><p>​   列表中的元素被从头到尾自动进行了编号，编号从0开始，这个编号被称为索引，角标或者下标</p><p>​   索引的取值范围：0~元素的个数 -1【列表的长度 -1】</p><p>​   超过索引的范围：列表越界</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#语法：列表名【标识符】 = [元素1，元素2.。。。。]#1.创建列表#1.1创建一个空列表#1.2创建一个带有元素的列表#2.思考问题：列表中能不能存储不同类型的数据？list3 = ['abc',10,3.14,True]print(list3)#注意：将需要存储的数据放到列表中，不需要考虑列表的大小，如果数据量很大的情况，在进行存储数据的时候，列表底层自动扩容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-列表元素的访问">3.列表元素的访问</h4><p>访问方式：通过索引访问列表中的元素【有序，索引：决定了元素在内存中的位置】</p><h5 id="3-1获取元素">3.1获取元素</h5><p>语法：列表名[索引]</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#元素的访问#创建列表list1 = [5,51,6,76,98,3]#需求：获取索引为3的位置上的元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-2替换元素">3.2替换元素</h5><p>语法：列表名[索引] = 值</p><p>注意：列表中存储的是其实是变量，所以可以随时修改值</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#需求：将索引为1位置上的元素替换为100#问题：超过索引的取值范围，则会出现索引越界的错误#解决办法：检查列表索引的取值范围#print(list1[6])   #IndexError: list index out of range   索引越界<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-3-遍历列表">3.3 遍历列表</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表的遍历</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token comment">#1.直接操作的是元素</span><span class="token comment">#2.通过索引的方式操作元素</span><span class="token comment">#思路：使用列表生成器生成一个和索引有关的列表 0~len(list2) -1</span><span class="token comment">#3.同时遍历索引和元素</span><span class="token comment">#enumerate  枚举【类似于一个容器】</span><span class="token comment">#index,n1-----索引，元素值</span><span class="token keyword">for</span> index<span class="token punctuation">,</span>n1 <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-列表的操作">4.列表的操作</h4><h5 id="1-1列表元素组合">1.1列表元素组合</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表组合【合并】</span><span class="token comment">#使用加号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-2列表元素重复">1.2列表元素重复</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表元素的重复</span><span class="token comment">#使用乘号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-3判断元素是否在列表中">1.3判断元素是否在列表中</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#判断指定元素是否在指定列表中</span><span class="token comment">#成员运算符   in  not in</span><span class="token triple-quoted-string string">"""工作原理：使用指定数据在列表中和每个元素进行比对，只要元素内容相等，则说明存在的返回：True或者False"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-4列表截取【切片】">1.4列表截取【切片】</h5><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#列表的截取</span>list7 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">6878</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#使用冒号:</span><span class="token comment">#截取指定的区间：列表名[开始索引：结束索引],特点：包头不包尾    前闭后开区间</span><span class="token comment">#从开头截取到指定索引，特点：不包含指定的索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#从指定索引截取到结尾</span><span class="token comment">#注意：因为包头不包尾，所以如果要取到最后一个元素，可以超过索引的范围，不会报错</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-列表的功能【掌握】">5.列表的功能【掌握】</h4><p>Python内置的功能【函数】</p><p>用法</p><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#功能的使用：列表名.功能的名字()</span><span class="token comment">#一、添加元素</span><span class="token comment">#1.append()   追加，在列表的末尾添加元素</span><span class="token comment">#特点：是在原列表的基础上操作的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#追加多个元素,不能直接追加，通过列表的形式追加，形成了一个二维列表</p><p>#2.extend()   扩展，在列表的末尾添加元素</p><p>#注意：append可以添加单个元素，但是extend不可以<br>#append添加多个元素的时候，以整个列表的形式添加进去；但是，extend只添加元素</p><p>#3.insert()   插入 ,在指定的索引处插入一个元素,后面的其他元素向后顺延<br>#insert(索引，插入的数据)<br>#需求：在索引为2的位置插入一个数字100</p><p>#二、删除元素<br>#1.pop()    弹出，移除列表中指定索引处的元素<br>list14 = [1,2,3,4,5]<br>print(list14)<br>#注意1：默认移除的是最后一个元素<br>#注意2：返回的是被移除的数据<br>result14 = list14.pop()</p><p>print(list14.pop(1))<br>print(list14)</p><p>#2.remove()  移除   特点;移除指定元素在列表中匹配到的第一个元素【从左往右】<br>#remove(元素值)</p><p>#3.clear()      清除  清除列表中的所有的元素，原列表变为空列表<br>list16 = [25,36,673]<br>print(list16)<br>list16.clear()<br>print(list16)</p><p>#三、获取<br>#直接使用功能：功能名称(列表)<br>#1.len() length,长度，获取列表的长度或者获取列表中元素的个数</p><p>#2.max()  获取列表中的最大值</p><p>#3.min() 获取列表中的最小值</p><p>#4.index()     索引,从列表中匹配到的第一个指定元素的索引值</p><p>#5.count()   个数，查找指定元素在列表中出现的次数</p><p>#四、其他用法<br>#1.reverse() 反转，将列表中的元素倒序输出</p><p>#注意;在列表的内部进行反转，并没有生成新的列表</p><p>#2.sort()    排序,默认为升序排序   注意：在列表的内部操作<br>list20 = [34,65,768,23]<br>#列表名.sort()<br>#升序<br>#list20.sort()<br>#降序<br>list20.sort(reverse=True)</p><p>#3.sorted()  排序,默认为升序排序   注意：生成一个新的列表<br>#升序<br>#降序<br>list23 = sorted(list21,reverse=True)</p><p>#按照元素的长度来进行排序<br>list24 = sorted(list00,key=len)</p><p>#课堂任务：remove()<br>list30 = [23,435,5656,6767,435,23,23,54,64,5676,23,23,23]<br>#需求：移除列表中指定的所有的元素，例如：23</p><p>1.自定义一个数字列表，获取这个列表中的最小值</p><ol start="2"><li><p>自定义一个数字列表，元素为10个 ,找出列表中<br>大数连同下标一起输出</p></li><li><p>自定义一个数字列表，求列表中第二大数的下标</p></li><li><p>青年歌手大奖赛 ,有10个评委打分 ,(<br>掉一个最高分一个最低分)求平均分</p></li><li><p>定义列表，存放5个学生的成绩【成绩值自己<br>定】，获得成绩之和，平均成绩，最小成绩，最大<br>绩。</p></li><li><p>将一个列表逆序输出, 提示: range(6,-1,-1)</p></li></ol><pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6-二维列表">6.二维列表</h4><p>一个列表的元素是一个列表</p><p>代码演示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#一维列表</span>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">346</span><span class="token punctuation">]</span><span class="token comment">#二维列表</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">543</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">234</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">4565</span><span class="token punctuation">,</span><span class="token number">767</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">565</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment">#处理二维列表：当做一个一维列表使用</span>subList <span class="token operator">=</span> list2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>subList<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>subList<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、布尔值和空值">二、布尔值和空值</h3><h4 id="1-布尔值">1.布尔值</h4><p>一个布尔类型的变量一般有两个值，True,False</p><p>作用：用于分支和循环语句中作为条件判断</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#Booleanb1 = Trueb2 = False#条件表达式结果布尔值print(4 5)print(1 and 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-空值">2.空值</h4><p>Python中的一种特殊的数据类型，使用None表示</p><p>区别与0：0是数字类型，None本身就是一种数据类型</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#空值n = Noneprint(n)   #None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-系统功能">2.系统功能</h4><h5 id="2-1数学功能">2.1数学功能</h5><p>abs(x):  absolute 求x的绝对值</p><p>max(): 求最大值</p><p>min()：求最小值</p><p>pow(n,m):求一个数的多少次幂</p><p>round(x，n):返回浮点数x的四舍五入值,如果给出n值，则表示舍入到小数点后几位</p><p>代码演示：</p><p>导入math模块，math.功能名()</p><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#以下的功能必须导入math模块import  math#使用格式：math.功能名称#19向上取整print(math.ceil(18.1))print(math.ceil(18.9))#18向下取整print(math.floor(18.1))print(math.floor(18.9))#求平方print(pow(3,2))#开平方【掌握】print(math.sqrt(9))#获取整数部分和小数部分，得到的结果为元组print(math.modf(22.3))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-2随机数random【掌握】">2.2随机数random【掌握】</h5><p>代码演示：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import random#1.random.choice(列表)  从指定列表中随机选择一个元素出来#指定列表#列表生成器#使用字符串，相当于使用了元素为字母的列表#需求;产生一个4~10之间的随机数#2.random.randrange(start,end,step)"""start:指定范围的开始值，包含在范围内，默认为0end:指定范围的结束值，不包含在范围内step:步长，指定的递增基数，默认为1"""#需求1：从1~100之间选取一个奇数随机数print(random.choice(range(1,100,2)))print(random.randrange(1,100,2))#需求2：生成一个0~99之间的随机数print(random.randrange(100))#3.random.random()   获取0~1之间的随机数，结果为浮点型n = random.random()#需求：保留小数点后两位print(round(n,2))#需求1：获取4~10之间的随机数n1 = random.random() * 6 + 4"""[0,1] * 6 ---------[0,6][0,6] + 4 --------[4,10]"""#4.将列表中的元素进行随机排序【了解】list1 = [23,5435,4,6]random.shuffle(list1)print(list1)#5.随机生成一个实数，它在[3,9]范围内，结果为浮点型print(random.uniform(3,9))#需求：求50~100之间的随机数，包括浮点数n2 = random.uniform(50,100)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">----------------------------------------7.完成猜拳游戏-----------------------------请输入你的选择:1. 石头2. 剪刀3. 布-----------------------------如: 你的选择是【布】, 电脑的选择是【石头】恭喜你获得了胜利！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="//2022/01/02/hello-world/"/>
      <url>//2022/01/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
